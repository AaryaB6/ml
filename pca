import numpy as np
import matplotlib.pyplot as plt

# Sample dataset (2D)
X = np.array([[2.5, 2.4],
              [0.5, 0.7],
              [2.2, 2.9],
              [1.9, 2.2],
              [3.1, 3.0],
              [2.3, 2.7],
              [2.0, 1.6],
              [1.0, 1.1],
              [1.5, 1.6],
              [1.1, 0.9]])


mean_X = np.mean(X, axis=0)
X_centered = X - mean_X


cov_matrix = np.cov(X_centered.T)


eigenvalues, eigenvectors = np.linalg.eig(cov_matrix)


sorted_indices = np.argsort(eigenvalues)[::-1]  # Sort in descending order
principal_component = eigenvectors[:, sorted_indices[0]]  # First eigenvector

X_pca = X_centered @ principal_component  # 1D Projection


X_reconstructed = np.outer(X_pca, principal_component) + mean_X


plt.figure(figsize=(8, 6))


plt.scatter(X[:, 0], X[:, 1], color='blue', label='Original Data')


pc_line = np.array([mean_X - 3 * principal_component, mean_X + 3 * principal_component])
plt.plot(pc_line[:, 0], pc_line[:, 1], 'k--', label='Principal Component')


plt.scatter(X_reconstructed[:, 0], X_reconstructed[:, 1], color='red', label='Projected Data')


for i in range(len(X)):
    plt.plot([X[i, 0], X_reconstructed[i, 0]], [X[i, 1], X_reconstructed[i, 1]], 'gray', linestyle='dotted')

plt.xlabel("Feature 1")
plt.ylabel("Feature 2")
plt.title("PCA Projection Visualization")
plt.legend()
plt.grid()
plt.show()

-------------------------------------------------------------------------------------------


import numpy as np
import matplotlib.pyplot as plt

# Sample dataset (2D)
X = np.array([[2.5, 2.4],
              [0.5, 0.7],
              [2.2, 2.9],
              [1.9, 2.2],
              [3.1, 3.0],
              [2.3, 2.7],
              [2.0, 1.6],
              [1.0, 1.1],
              [1.5, 1.6],
              [1.1, 0.9]])


mean_X = np.mean(X, axis=0)
X_centered = X - mean_X


U, S, Vt = np.linalg.svd(X_centered)


principal_component = Vt[0]


X_pca = X_centered @ principal_component  # 1D Projection


X_reconstructed = np.outer(X_pca, principal_component) + mean_X


plt.figure(figsize=(8, 6))


plt.scatter(X[:, 0], X[:, 1], color='blue', label='Original Data')


pc_line = np.array([mean_X - 3 * principal_component, mean_X + 3 * principal_component])
plt.plot(pc_line[:, 0], pc_line[:, 1], 'k--', label='Principal Component')


plt.scatter(X_reconstructed[:, 0], X_reconstructed[:, 1], color='red', label='Projected Data')


for i in range(len(X)):
    plt.plot([X[i, 0], X_reconstructed[i, 0]], [X[i, 1], X_reconstructed[i, 1]], 'gray', linestyle='dotted')

plt.xlabel("Feature 1")
plt.ylabel("Feature 2")
plt.title("SVD-Based PCA Projection Visualization")
plt.legend()
plt.grid()
plt.show()

